
repeat wait() until game:IsLoaded() 

loadstring(game:HttpGet("https://raw.githubusercontent.com/Novaz5792/X/main/X"))() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/Novaz5792/X/main/Y"))() 

game.ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("getclientping").OnClientInvoke = function(Novaz5792) 
    task.wait(5)
    return true 
end

local mobs = {} 

for i,v in pairs(Workspace.Mobs:GetDescendants()) do 
    if v:FindFirstChild("Npc_Configuration") and v.Parent:FindFirstChild("Npc_Configuration"):IsA("ModuleScript") then
        local modu = require(v.Npc_Configuration) 
        table.insert(mobs, {v, modu.Npc_Spawning.Spawn_Locations[1] or modu.Npc_Spawning.Spawn_Locations, modu.Name})
    end 
    if v.Parent:FindFirstChild("Npc_Configuration") and v.Parent:FindFirstChild("Npc_Configuration"):IsA("ModuleScript") then
        local modu = require(v.Parent.Npc_Configuration) 
        table.insert(mobs, {v.Parent, modu.Npc_Spawning.Spawn_Locations[1] or modu.Npc_Spawning.Spawn_Locations, modu.Name})
    end 
end 

Workspace.Mobs.DescendantAdded:Connect(function(v)
    if v:FindFirstChild("Npc_Configuration") and v.Parent:FindFirstChild("Npc_Configuration"):IsA("ModuleScript") then
        local modu = require(v.Npc_Configuration) 
        table.insert(mobs, {v, modu.Npc_Spawning.Spawn_Locations[1] or modu.Npc_Spawning.Spawn_Locations, modu.Name})
    end 
    if v.Parent:FindFirstChild("Npc_Configuration") and v.Parent:FindFirstChild("Npc_Configuration"):IsA("ModuleScript") then
        local modu = require(v.Parent.Npc_Configuration) 
        table.insert(mobs, {v.Parent, modu.Npc_Spawning.Spawn_Locations[1] or modu.Npc_Spawning.Spawn_Locations, modu.Name})
    end 
end)

Workspace.Mobs.DescendantRemoving:Connect(function(v)
    if v:IsA("Configuration") then 
        for i1,v1 in ipairs(mobs) do 
            if v1[1] == v then 
                table.remove(mobs, i1)
            end 
        end 
    end 
end)

function getclosestmob(bosses)
    local ret = {{nil, Vector3.new()}, Huge} 
    for i,v in pairs(mobs) do
        local model = v[1]:FindFirstChildOfClass("Model")
        if model and model:FindFirstChild("Humanoid") and model.Humanoid.Health > 0 and (r and Workspace.Mobs:FindFirstChild("Bosses") and model:IsDescendantOf(Workspace.Mobs.Bosses) or true) then 
            local magnitude = (HumanoidRootPart.Position - v[2]).Magnitude 
            if model:FindFirstChild("HumanoidRootPart") then 
                local magnitude1 = (HumanoidRootPart.Position - model:FindFirstChild("HumanoidRootPart").Position).Magnitude
                if magnitude1 < ret[2] then 
                    ret[2] = magnitude1 
                    ret[1][1] = model 
                    ret[1][2] = v[2]
                end 
            elseif magnitude < ret[2] then 
                ret[2] = magnitude 
                ret[1][1] = model 
                ret[1][2] = v[2]
            end 
        end 
    end
    return ret[1]
end 

local lib = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local subs = lib.subs 
local libclose = subs.Wait

local window = lib:CreateWindow({
    Name = "Lenovo",
    Themeable = {
        Info = {"Kalas A Skid"},
        Credit = false, 
        Background = "",
        Visible = true
    }
})

local main1 = window:CreateTab({
    Name = "Main"
})

local section1 = main1:CreateSection({
    Name = "Main"
})

local section2 = main1:CreateSection({
    Name = "Kill Aura",
    Side = "Right"
})

Stepped:Connect(function()
    if a then 
        for i,v in pairs(Character:GetChildren()) do 
            if v:IsA("BasePart") and v.CanCollide then 
                v.CanCollide = false 
            end 
